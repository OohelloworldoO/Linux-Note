Ctrl+z 放在終止並背景執行

jobs 可以列出背景工作狀態，編號

fg + [編號] 丟回前景執行

bg + [編號] 背景繼續執行

nice -n +一個正數或負數 +指令 =指定指令優先權值[PRI(預設80) + NI(-20~19)]

sudo !! =以超級使用者執行上一個指令

kill pid =溫和的中指
kill -9 pid =暴力終止
pkill +name =停止多個

/proc 行程資訊目錄

# 註解用
; 區隔兩個不同的指令/命令，不論前面執行成功或失敗，後面都會繼續執行(可以不只一個分號
&& 也是指令和並用，但前面執行成功，後面才會繼續執行
|| 前面失敗，後面執行;反之前面成功，後面不執行

type -a +指令 查詢
如果指令屬於內製命令，會優先執行

a=5
echo $aa
印出aa

a=5
echo %a{a}
印出a5

$$ 
Shell本身的PID（ProcessID） 
$! 
Shell最後運行的後台Process的PID 
$? 
最後運行的命令的结束代码（返回值） 
$- 
使用Set命令设定的Flag一览 
$* 
所有参数列表。如"$*"用「"」括起来的情况、以"$1 $2 … $n"的形式输出所有参数。 
$@ 
所有参数列表。如"$@"用「"」括起来的情况、以"$1" "$2" … "$n" 的形式输出所有参数。 
$# 
添加到Shell的参数个数 
$0 
Shell本身的文件名 
$1～$n 

zombie process 子進程已死但仍然沒有被回收。與正常進程不同，kill命令對殭屍進程無效。孤兒(Orphan Process)進程不同於殭屍進程，其父進程已經死掉，但孤兒進程仍能正常執行，但並不會變為殭屍進程，因為被init（進程ID號為1）收養並wait其退出

set可以用來顯示系統的環境變亮還有自己定義的變量
set可以設定某個環境變數的值。清除環境變數的值用unset命令。如果未指定值，則該變數值將被 設為NULL
